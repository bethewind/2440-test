


ARM Macro Assembler    Page 1 


    1 00000000         ;=======================================================
                       ==============
    2 00000000         ; File Name : 2440slib.s
    3 00000000         ; Function  : S3C2440  (Assembly)
    4 00000000         ; Date      : March 09, 2002
    5 00000000         ; Revision : Programming start (February 26,2002) -> SOP
                       
    6 00000000         ; Revision : 03.11.2003 ver 0.0 Attatched for 2440
    7 00000000         ;=======================================================
                       ==============
    8 00000000         
    9 00000000         ;Interrupt, FIQ/IRQ disable
   10 00000000 000000C0 
                       NOINT   EQU              0xc0        ; 1100 0000
   11 00000000         
   12 00000000         ;Check if tasm.exe(armasm -16 ...@ADS 1.0) is used.
   13 00000000                 GBLL             THUMBCODE
   14 00000000                 [                {CONFIG} = 16
   18 00000000 FALSE    
                       THUMBCODE
                               SETL             {FALSE}
   19 00000000                 ]
   20 00000000         
   21 00000000                 MACRO
   22 00000000                 MOV_PC_LR
   23 00000000         ; [ THUMBCODE
   24 00000000                 bx               lr
   25 00000000         ; |
   26 00000000         ;   mov pc,lr
   27 00000000         ; ]
   28 00000000                 MEND
   29 00000000         
   30 00000000                 AREA             |C$$code|, CODE, READONLY
   31 00000000         
   32 00000000         ;========================================
   33 00000000         ;Workaround of problem between LCD and Framebuffer
   34 00000000         ;========================================
   35 00000000                 EXPORT           SDRAMtest
   36 00000000         SDRAMtest
   37 00000000 E3A00431        ldr              r0,=0x31000000
   38 00000004 E3A01702        ldr              r1,=0x80000
   39 00000008 E3A022FF        mov              r2,#0xf000000f
   40 0000000C E4802004 
                       LB2     str              r2,[r0],#4
   41 00000010 E4802004        str              r2,[r0],#4
   42 00000014 E2511004        subs             r1,r1,#4
   43 00000018 1AFFFFFB        bne              LB2
   44 0000001C E12FFF1E        bx               lr
   45 00000020         
   46 00000020         
   47 00000020         ;==============
   48 00000020         ; CPSR I,F bit
   49 00000020         ;==============
   50 00000020         ;int SET_IF(void);
   51 00000020         ;The return value is current CPSR.
   52 00000020                 EXPORT           SET_IF
   53 00000020         SET_IF
   54 00000020         ;This function works only if the processor is in previli
                       ged mode.



ARM Macro Assembler    Page 2 


   55 00000020 E10F0000        mrs              r0,cpsr
   56 00000024 E1A01000        mov              r1,r0
   57 00000028 E38110C0        orr              r1,r1,#NOINT
   58 0000002C E12FF001        msr              cpsr_cxsf,r1
   59 00000030                 MOV_PC_LR
   23 00000030         ; [ THUMBCODE
   24 00000030 E12FFF1E        bx               lr
   25 00000034         ; |
   26 00000034         ;   mov pc,lr
   27 00000034         ; ]
   60 00000034         
   61 00000034         ;void WR_IF(int cpsrValue);
   62 00000034                 EXPORT           WR_IF
   63 00000034         WR_IF
   64 00000034         ;This function works only if the processor is in previli
                       ged mode.
   65 00000034 E12FF000        msr              cpsr_cxsf,r0
   66 00000038                 MOV_PC_LR
   23 00000038         ; [ THUMBCODE
   24 00000038 E12FFF1E        bx               lr
   25 0000003C         ; |
   26 0000003C         ;   mov pc,lr
   27 0000003C         ; ]
   67 0000003C         
   68 0000003C         
   69 0000003C         ;void CLR_IF(void);
   70 0000003C                 EXPORT           CLR_IF
   71 0000003C         CLR_IF
   72 0000003C         ;This function works only if the processor is in previli
                       ged mode.
   73 0000003C E10F0000        mrs              r0,cpsr
   74 00000040 E3C000C0        bic              r0,r0,#NOINT
   75 00000044 E12FF000        msr              cpsr_cxsf,r0
   76 00000048                 MOV_PC_LR
   23 00000048         ; [ THUMBCODE
   24 00000048 E12FFF1E        bx               lr
   25 0000004C         ; |
   26 0000004C         ;   mov pc,lr
   27 0000004C         ; ]
   77 0000004C         
   78 0000004C         ;====================================
   79 0000004C         ; MMU Cache/TLB/etc on/off functions
   80 0000004C         ;====================================
   81 0000004C 00001000 
                       R1_I    EQU              (1<<12)
   82 0000004C 00000004 
                       R1_C    EQU              (1<<2)
   83 0000004C 00000002 
                       R1_A    EQU              (1<<1)
   84 0000004C 00000001 
                       R1_M    EQU              (1)
   85 0000004C 80000000 
                       R1_iA   EQU              (1<<31)
   86 0000004C 40000000 
                       R1_nF   EQU              (1<<30)
   87 0000004C         
   88 0000004C         ;void MMU_EnableICache(void)
   89 0000004C                 EXPORT           MMU_EnableICache
   90 0000004C         MMU_EnableICache



ARM Macro Assembler    Page 3 


   91 0000004C EE110F10        mrc              p15,0,r0,c1,c0,0
   92 00000050 E3800A01        orr              r0,r0,#R1_I
   93 00000054 EE010F10        mcr              p15,0,r0,c1,c0,0
   94 00000058                 MOV_PC_LR
   23 00000058         ; [ THUMBCODE
   24 00000058 E12FFF1E        bx               lr
   25 0000005C         ; |
   26 0000005C         ;   mov pc,lr
   27 0000005C         ; ]
   95 0000005C         
   96 0000005C         ;void MMU_DisableICache(void)
   97 0000005C                 EXPORT           MMU_DisableICache
   98 0000005C         MMU_DisableICache
   99 0000005C EE110F10        mrc              p15,0,r0,c1,c0,0
  100 00000060 E3C00A01        bic              r0,r0,#R1_I
  101 00000064 EE010F10        mcr              p15,0,r0,c1,c0,0
  102 00000068                 MOV_PC_LR
   23 00000068         ; [ THUMBCODE
   24 00000068 E12FFF1E        bx               lr
   25 0000006C         ; |
   26 0000006C         ;   mov pc,lr
   27 0000006C         ; ]
  103 0000006C         
  104 0000006C         ;void MMU_EnableDCache(void)
  105 0000006C                 EXPORT           MMU_EnableDCache
  106 0000006C         MMU_EnableDCache
  107 0000006C EE110F10        mrc              p15,0,r0,c1,c0,0
  108 00000070 E3800004        orr              r0,r0,#R1_C
  109 00000074 EE010F10        mcr              p15,0,r0,c1,c0,0
  110 00000078                 MOV_PC_LR
   23 00000078         ; [ THUMBCODE
   24 00000078 E12FFF1E        bx               lr
   25 0000007C         ; |
   26 0000007C         ;   mov pc,lr
   27 0000007C         ; ]
  111 0000007C         
  112 0000007C         ;void MMU_DisableDCache(void)
  113 0000007C                 EXPORT           MMU_DisableDCache
  114 0000007C         MMU_DisableDCache
  115 0000007C EE110F10        mrc              p15,0,r0,c1,c0,0
  116 00000080 E3C00004        bic              r0,r0,#R1_C
  117 00000084 EE010F10        mcr              p15,0,r0,c1,c0,0
  118 00000088                 MOV_PC_LR
   23 00000088         ; [ THUMBCODE
   24 00000088 E12FFF1E        bx               lr
   25 0000008C         ; |
   26 0000008C         ;   mov pc,lr
   27 0000008C         ; ]
  119 0000008C         
  120 0000008C         ;void MMU_EnableAlignFault(void)
  121 0000008C                 EXPORT           MMU_EnableAlignFault
  122 0000008C         MMU_EnableAlignFault
  123 0000008C EE110F10        mrc              p15,0,r0,c1,c0,0
  124 00000090 E3800002        orr              r0,r0,#R1_A
  125 00000094 EE010F10        mcr              p15,0,r0,c1,c0,0
  126 00000098                 MOV_PC_LR
   23 00000098         ; [ THUMBCODE
   24 00000098 E12FFF1E        bx               lr
   25 0000009C         ; |



ARM Macro Assembler    Page 4 


   26 0000009C         ;   mov pc,lr
   27 0000009C         ; ]
  127 0000009C         
  128 0000009C         ;void MMU_DisableAlignFault(void)
  129 0000009C                 EXPORT           MMU_DisableAlignFault
  130 0000009C         MMU_DisableAlignFault
  131 0000009C EE110F10        mrc              p15,0,r0,c1,c0,0
  132 000000A0 E3C00002        bic              r0,r0,#R1_A
  133 000000A4 EE010F10        mcr              p15,0,r0,c1,c0,0
  134 000000A8                 MOV_PC_LR
   23 000000A8         ; [ THUMBCODE
   24 000000A8 E12FFF1E        bx               lr
   25 000000AC         ; |
   26 000000AC         ;   mov pc,lr
   27 000000AC         ; ]
  135 000000AC         
  136 000000AC         ;void MMU_EnableMMU(void)
  137 000000AC                 EXPORT           MMU_EnableMMU
  138 000000AC         MMU_EnableMMU
  139 000000AC EE110F10        mrc              p15,0,r0,c1,c0,0
  140 000000B0 E3800001        orr              r0,r0,#R1_M
  141 000000B4 EE010F10        mcr              p15,0,r0,c1,c0,0
  142 000000B8                 MOV_PC_LR
   23 000000B8         ; [ THUMBCODE
   24 000000B8 E12FFF1E        bx               lr
   25 000000BC         ; |
   26 000000BC         ;   mov pc,lr
   27 000000BC         ; ]
  143 000000BC         
  144 000000BC         ;void MMU_DisableMMU(void)
  145 000000BC                 EXPORT           MMU_DisableMMU
  146 000000BC         MMU_DisableMMU
  147 000000BC EE110F10        mrc              p15,0,r0,c1,c0,0
  148 000000C0 E3C00001        bic              r0,r0,#R1_M
  149 000000C4 EE010F10        mcr              p15,0,r0,c1,c0,0
  150 000000C8                 MOV_PC_LR
   23 000000C8         ; [ THUMBCODE
   24 000000C8 E12FFF1E        bx               lr
   25 000000CC         ; |
   26 000000CC         ;   mov pc,lr
   27 000000CC         ; ]
  151 000000CC         
  152 000000CC         ;void MMU_SetFastBusMode(void)
  153 000000CC         ; FCLK:HCLK= 1:1
  154 000000CC                 EXPORT           MMU_SetFastBusMode
  155 000000CC         MMU_SetFastBusMode
  156 000000CC EE110F10        mrc              p15,0,r0,c1,c0,0
  157 000000D0 E3C00103        bic              r0,r0,#R1_iA:OR:R1_nF
  158 000000D4 EE010F10        mcr              p15,0,r0,c1,c0,0
  159 000000D8                 MOV_PC_LR
   23 000000D8         ; [ THUMBCODE
   24 000000D8 E12FFF1E        bx               lr
   25 000000DC         ; |
   26 000000DC         ;   mov pc,lr
   27 000000DC         ; ]
  160 000000DC         
  161 000000DC         ;void MMU_SetAsyncBusMode(void)
  162 000000DC         ; FCLK:HCLK= 1:2
  163 000000DC                 EXPORT           MMU_SetAsyncBusMode



ARM Macro Assembler    Page 5 


  164 000000DC         MMU_SetAsyncBusMode
  165 000000DC EE110F10        mrc              p15,0,r0,c1,c0,0
  166 000000E0 E3800103        orr              r0,r0,#R1_nF:OR:R1_iA
  167 000000E4 EE010F10        mcr              p15,0,r0,c1,c0,0
  168 000000E8                 MOV_PC_LR
   23 000000E8         ; [ THUMBCODE
   24 000000E8 E12FFF1E        bx               lr
   25 000000EC         ; |
   26 000000EC         ;   mov pc,lr
   27 000000EC         ; ]
  169 000000EC         
  170 000000EC         ;=========================
  171 000000EC         ; Set TTBase
  172 000000EC         ;=========================
  173 000000EC         ;void MMU_SetTTBase(int base)
  174 000000EC                 EXPORT           MMU_SetTTBase
  175 000000EC         MMU_SetTTBase
  176 000000EC         ;ro=TTBase
  177 000000EC EE020F10        mcr              p15,0,r0,c2,c0,0
  178 000000F0                 MOV_PC_LR
   23 000000F0         ; [ THUMBCODE
   24 000000F0 E12FFF1E        bx               lr
   25 000000F4         ; |
   26 000000F4         ;   mov pc,lr
   27 000000F4         ; ]
  179 000000F4         
  180 000000F4         ;=========================
  181 000000F4         ; Set Domain
  182 000000F4         ;=========================
  183 000000F4         ;void MMU_SetDomain(int domain)
  184 000000F4                 EXPORT           MMU_SetDomain
  185 000000F4         MMU_SetDomain
  186 000000F4         ;ro=domain
  187 000000F4 EE030F10        mcr              p15,0,r0,c3,c0,0
  188 000000F8                 MOV_PC_LR
   23 000000F8         ; [ THUMBCODE
   24 000000F8 E12FFF1E        bx               lr
   25 000000FC         ; |
   26 000000FC         ;   mov pc,lr
   27 000000FC         ; ]
  189 000000FC         
  190 000000FC         ;=========================
  191 000000FC         ; ICache/DCache functions
  192 000000FC         ;=========================
  193 000000FC         ;void MMU_InvalidateIDCache(void)
  194 000000FC                 EXPORT           MMU_InvalidateIDCache
  195 000000FC         MMU_InvalidateIDCache
  196 000000FC EE070F17        mcr              p15,0,r0,c7,c7,0
  197 00000100                 MOV_PC_LR
   23 00000100         ; [ THUMBCODE
   24 00000100 E12FFF1E        bx               lr
   25 00000104         ; |
   26 00000104         ;   mov pc,lr
   27 00000104         ; ]
  198 00000104         
  199 00000104         ;void MMU_InvalidateICache(void)
  200 00000104                 EXPORT           MMU_InvalidateICache
  201 00000104         MMU_InvalidateICache
  202 00000104 EE070F15        mcr              p15,0,r0,c7,c5,0



ARM Macro Assembler    Page 6 


  203 00000108                 MOV_PC_LR
   23 00000108         ; [ THUMBCODE
   24 00000108 E12FFF1E        bx               lr
   25 0000010C         ; |
   26 0000010C         ;   mov pc,lr
   27 0000010C         ; ]
  204 0000010C         
  205 0000010C         ;void MMU_InvalidateICacheMVA(U32 mva)
  206 0000010C                 EXPORT           MMU_InvalidateICacheMVA
  207 0000010C         MMU_InvalidateICacheMVA
  208 0000010C         ;r0=mva
  209 0000010C EE070F35        mcr              p15,0,r0,c7,c5,1
  210 00000110                 MOV_PC_LR
   23 00000110         ; [ THUMBCODE
   24 00000110 E12FFF1E        bx               lr
   25 00000114         ; |
   26 00000114         ;   mov pc,lr
   27 00000114         ; ]
  211 00000114         
  212 00000114         ;void MMU_PrefetchICacheMVA(U32 mva)
  213 00000114                 EXPORT           MMU_PrefetchICacheMVA
  214 00000114         MMU_PrefetchICacheMVA
  215 00000114         ;r0=mva
  216 00000114 EE070F3D        mcr              p15,0,r0,c7,c13,1
  217 00000118                 MOV_PC_LR
   23 00000118         ; [ THUMBCODE
   24 00000118 E12FFF1E        bx               lr
   25 0000011C         ; |
   26 0000011C         ;   mov pc,lr
   27 0000011C         ; ]
  218 0000011C         
  219 0000011C         ;void MMU_InvalidateDCache(void)
  220 0000011C                 EXPORT           MMU_InvalidateDCache
  221 0000011C         MMU_InvalidateDCache
  222 0000011C EE070F16        mcr              p15,0,r0,c7,c6,0
  223 00000120                 MOV_PC_LR
   23 00000120         ; [ THUMBCODE
   24 00000120 E12FFF1E        bx               lr
   25 00000124         ; |
   26 00000124         ;   mov pc,lr
   27 00000124         ; ]
  224 00000124         
  225 00000124         ;void MMU_InvalidateDCacheMVA(U32 mva)
  226 00000124                 EXPORT           MMU_InvalidateDCacheMVA
  227 00000124         MMU_InvalidateDCacheMVA
  228 00000124         ;r0=mva
  229 00000124 EE070F36        mcr              p15,0,r0,c7,c6,1
  230 00000128                 MOV_PC_LR
   23 00000128         ; [ THUMBCODE
   24 00000128 E12FFF1E        bx               lr
   25 0000012C         ; |
   26 0000012C         ;   mov pc,lr
   27 0000012C         ; ]
  231 0000012C         
  232 0000012C         ;void MMU_CleanDCacheMVA(U32 mva)
  233 0000012C                 EXPORT           MMU_CleanDCacheMVA
  234 0000012C         MMU_CleanDCacheMVA
  235 0000012C         ;r0=mva
  236 0000012C EE070F3A        mcr              p15,0,r0,c7,c10,1



ARM Macro Assembler    Page 7 


  237 00000130                 MOV_PC_LR
   23 00000130         ; [ THUMBCODE
   24 00000130 E12FFF1E        bx               lr
   25 00000134         ; |
   26 00000134         ;   mov pc,lr
   27 00000134         ; ]
  238 00000134         
  239 00000134         ;void MMU_CleanInvalidateDCacheMVA(U32 mva)
  240 00000134                 EXPORT           MMU_CleanInvalidateDCacheMVA
  241 00000134         MMU_CleanInvalidateDCacheMVA
  242 00000134         ;r0=mva
  243 00000134 EE070F3E        mcr              p15,0,r0,c7,c14,1
  244 00000138                 MOV_PC_LR
   23 00000138         ; [ THUMBCODE
   24 00000138 E12FFF1E        bx               lr
   25 0000013C         ; |
   26 0000013C         ;   mov pc,lr
   27 0000013C         ; ]
  245 0000013C         
  246 0000013C         ;void MMU_CleanDCacheIndex(U32 index)
  247 0000013C                 EXPORT           MMU_CleanDCacheIndex
  248 0000013C         MMU_CleanDCacheIndex
  249 0000013C         ;r0=index
  250 0000013C EE070F5A        mcr              p15,0,r0,c7,c10,2
  251 00000140                 MOV_PC_LR
   23 00000140         ; [ THUMBCODE
   24 00000140 E12FFF1E        bx               lr
   25 00000144         ; |
   26 00000144         ;   mov pc,lr
   27 00000144         ; ]
  252 00000144         
  253 00000144         ;void MMU_CleanInvalidateDCacheIndex(U32 index)
  254 00000144                 EXPORT           MMU_CleanInvalidateDCacheIndex
  255 00000144         MMU_CleanInvalidateDCacheIndex
  256 00000144         ;r0=index
  257 00000144 EE070F5E        mcr              p15,0,r0,c7,c14,2
  258 00000148                 MOV_PC_LR
   23 00000148         ; [ THUMBCODE
   24 00000148 E12FFF1E        bx               lr
   25 0000014C         ; |
   26 0000014C         ;   mov pc,lr
   27 0000014C         ; ]
  259 0000014C         
  260 0000014C         ;void MMU_WaitForInterrupt(void)
  261 0000014C                 EXPORT           MMU_WaitForInterrupt
  262 0000014C         MMU_WaitForInterrupt
  263 0000014C EE070F90        mcr              p15,0,r0,c7,c0,4
  264 00000150                 MOV_PC_LR
   23 00000150         ; [ THUMBCODE
   24 00000150 E12FFF1E        bx               lr
   25 00000154         ; |
   26 00000154         ;   mov pc,lr
   27 00000154         ; ]
  265 00000154         
  266 00000154         ;===============
  267 00000154         ; TLB functions
  268 00000154         ;===============
  269 00000154         ;voic MMU_InvalidateTLB(void)
  270 00000154                 EXPORT           MMU_InvalidateTLB



ARM Macro Assembler    Page 8 


  271 00000154         MMU_InvalidateTLB
  272 00000154 EE080F17        mcr              p15,0,r0,c8,c7,0
  273 00000158                 MOV_PC_LR
   23 00000158         ; [ THUMBCODE
   24 00000158 E12FFF1E        bx               lr
   25 0000015C         ; |
   26 0000015C         ;   mov pc,lr
   27 0000015C         ; ]
  274 0000015C         
  275 0000015C         ;void MMU_InvalidateITLB(void)
  276 0000015C                 EXPORT           MMU_InvalidateITLB
  277 0000015C         MMU_InvalidateITLB
  278 0000015C EE080F15        mcr              p15,0,r0,c8,c5,0
  279 00000160                 MOV_PC_LR
   23 00000160         ; [ THUMBCODE
   24 00000160 E12FFF1E        bx               lr
   25 00000164         ; |
   26 00000164         ;   mov pc,lr
   27 00000164         ; ]
  280 00000164         
  281 00000164         ;void MMU_InvalidateITLBMVA(U32 mva)
  282 00000164                 EXPORT           MMU_InvalidateITLBMVA
  283 00000164         MMU_InvalidateITLBMVA
  284 00000164         ;ro=mva
  285 00000164 EE080F35        mcr              p15,0,r0,c8,c5,1
  286 00000168                 MOV_PC_LR
   23 00000168         ; [ THUMBCODE
   24 00000168 E12FFF1E        bx               lr
   25 0000016C         ; |
   26 0000016C         ;   mov pc,lr
   27 0000016C         ; ]
  287 0000016C         
  288 0000016C         ;void MMU_InvalidateDTLB(void)
  289 0000016C                 EXPORT           MMU_InvalidateDTLB
  290 0000016C         MMU_InvalidateDTLB
  291 0000016C EE080F16        mcr              p15,0,r0,c8,c6,0
  292 00000170                 MOV_PC_LR
   23 00000170         ; [ THUMBCODE
   24 00000170 E12FFF1E        bx               lr
   25 00000174         ; |
   26 00000174         ;   mov pc,lr
   27 00000174         ; ]
  293 00000174         
  294 00000174         ;void MMU_InvalidateDTLBMVA(U32 mva)
  295 00000174                 EXPORT           MMU_InvalidateDTLBMVA
  296 00000174         MMU_InvalidateDTLBMVA
  297 00000174         ;r0=mva
  298 00000174 EE080F36        mcr              p15,0,r0,c8,c6,1
  299 00000178                 MOV_PC_LR
   23 00000178         ; [ THUMBCODE
   24 00000178 E12FFF1E        bx               lr
   25 0000017C         ; |
   26 0000017C         ;   mov pc,lr
   27 0000017C         ; ]
  300 0000017C         
  301 0000017C         ;=================
  302 0000017C         ; Cache lock down
  303 0000017C         ;=================
  304 0000017C         ;void MMU_SetDCacheLockdownBase(U32 base)



ARM Macro Assembler    Page 9 


  305 0000017C                 EXPORT           MMU_SetDCacheLockdownBase
  306 0000017C         MMU_SetDCacheLockdownBase
  307 0000017C         ;r0= victim & lockdown base
  308 0000017C EE090F10        mcr              p15,0,r0,c9,c0,0
  309 00000180                 MOV_PC_LR
   23 00000180         ; [ THUMBCODE
   24 00000180 E12FFF1E        bx               lr
   25 00000184         ; |
   26 00000184         ;   mov pc,lr
   27 00000184         ; ]
  310 00000184         
  311 00000184         ;void MMU_SetICacheLockdownBase(U32 base)
  312 00000184                 EXPORT           MMU_SetICacheLockdownBase
  313 00000184         MMU_SetICacheLockdownBase
  314 00000184         ;r0= victim & lockdown base
  315 00000184 EE090F30        mcr              p15,0,r0,c9,c0,1
  316 00000188                 MOV_PC_LR
   23 00000188         ; [ THUMBCODE
   24 00000188 E12FFF1E        bx               lr
   25 0000018C         ; |
   26 0000018C         ;   mov pc,lr
   27 0000018C         ; ]
  317 0000018C         
  318 0000018C         ;=================
  319 0000018C         ; TLB lock down
  320 0000018C         ;=================
  321 0000018C         ;void MMU_SetDTLBLockdown(U32 baseVictim)
  322 0000018C                 EXPORT           MMU_SetDTLBLockdown
  323 0000018C         MMU_SetDTLBLockdown
  324 0000018C         ;r0= baseVictim
  325 0000018C EE0A0F10        mcr              p15,0,r0,c10,c0,0
  326 00000190                 MOV_PC_LR
   23 00000190         ; [ THUMBCODE
   24 00000190 E12FFF1E        bx               lr
   25 00000194         ; |
   26 00000194         ;   mov pc,lr
   27 00000194         ; ]
  327 00000194         
  328 00000194         ;void MMU_SetITLBLockdown(U32 baseVictim)
  329 00000194                 EXPORT           MMU_SetITLBLockdown
  330 00000194         MMU_SetITLBLockdown
  331 00000194         ;r0= baseVictim
  332 00000194 EE0A0F30        mcr              p15,0,r0,c10,c0,1
  333 00000198                 MOV_PC_LR
   23 00000198         ; [ THUMBCODE
   24 00000198 E12FFF1E        bx               lr
   25 0000019C         ; |
   26 0000019C         ;   mov pc,lr
   27 0000019C         ; ]
  334 0000019C         
  335 0000019C         ;============
  336 0000019C         ; Process ID
  337 0000019C         ;============
  338 0000019C         ;void MMU_SetProcessId(U32 pid)
  339 0000019C                 EXPORT           MMU_SetProcessId
  340 0000019C         MMU_SetProcessId
  341 0000019C         ;r0= pid
  342 0000019C EE0D0F10        mcr              p15,0,r0,c13,c0,0
  343 000001A0                 MOV_PC_LR



ARM Macro Assembler    Page 10 


   23 000001A0         ; [ THUMBCODE
   24 000001A0 E12FFF1E        bx               lr
   25 000001A4         ; |
   26 000001A4         ;   mov pc,lr
   27 000001A4         ; ]
  344 000001A4         ;-------------------------------------------
  345 000001A4         
  346 000001A4         
  347 000001A4                 END
Command Line: --debug --xref --device=DARMSS9 --apcs=interwork -o.\obj\2440slib
.o -Id:\Keil\ARM\INC\Samsung --list=2440slib.lst 2440slib.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

C$$code 00000000

Symbol: C$$code
   Definitions
      At line 30 in file 2440slib.s
   Uses
      None
Comment: C$$code unused
CLR_IF 0000003C

Symbol: CLR_IF
   Definitions
      At line 71 in file 2440slib.s
   Uses
      At line 70 in file 2440slib.s
Comment: CLR_IF used once
LB2 0000000C

Symbol: LB2
   Definitions
      At line 40 in file 2440slib.s
   Uses
      At line 43 in file 2440slib.s
Comment: LB2 used once
MMU_CleanDCacheIndex 0000013C

Symbol: MMU_CleanDCacheIndex
   Definitions
      At line 248 in file 2440slib.s
   Uses
      At line 247 in file 2440slib.s
Comment: MMU_CleanDCacheIndex used once
MMU_CleanDCacheMVA 0000012C

Symbol: MMU_CleanDCacheMVA
   Definitions
      At line 234 in file 2440slib.s
   Uses
      At line 233 in file 2440slib.s
Comment: MMU_CleanDCacheMVA used once
MMU_CleanInvalidateDCacheIndex 00000144

Symbol: MMU_CleanInvalidateDCacheIndex
   Definitions
      At line 255 in file 2440slib.s
   Uses
      At line 254 in file 2440slib.s
Comment: MMU_CleanInvalidateDCacheIndex used once
MMU_CleanInvalidateDCacheMVA 00000134

Symbol: MMU_CleanInvalidateDCacheMVA
   Definitions
      At line 241 in file 2440slib.s
   Uses
      At line 240 in file 2440slib.s
Comment: MMU_CleanInvalidateDCacheMVA used once
MMU_DisableAlignFault 0000009C

Symbol: MMU_DisableAlignFault



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 130 in file 2440slib.s
   Uses
      At line 129 in file 2440slib.s
Comment: MMU_DisableAlignFault used once
MMU_DisableDCache 0000007C

Symbol: MMU_DisableDCache
   Definitions
      At line 114 in file 2440slib.s
   Uses
      At line 113 in file 2440slib.s
Comment: MMU_DisableDCache used once
MMU_DisableICache 0000005C

Symbol: MMU_DisableICache
   Definitions
      At line 98 in file 2440slib.s
   Uses
      At line 97 in file 2440slib.s
Comment: MMU_DisableICache used once
MMU_DisableMMU 000000BC

Symbol: MMU_DisableMMU
   Definitions
      At line 146 in file 2440slib.s
   Uses
      At line 145 in file 2440slib.s
Comment: MMU_DisableMMU used once
MMU_EnableAlignFault 0000008C

Symbol: MMU_EnableAlignFault
   Definitions
      At line 122 in file 2440slib.s
   Uses
      At line 121 in file 2440slib.s
Comment: MMU_EnableAlignFault used once
MMU_EnableDCache 0000006C

Symbol: MMU_EnableDCache
   Definitions
      At line 106 in file 2440slib.s
   Uses
      At line 105 in file 2440slib.s
Comment: MMU_EnableDCache used once
MMU_EnableICache 0000004C

Symbol: MMU_EnableICache
   Definitions
      At line 90 in file 2440slib.s
   Uses
      At line 89 in file 2440slib.s
Comment: MMU_EnableICache used once
MMU_EnableMMU 000000AC

Symbol: MMU_EnableMMU
   Definitions
      At line 138 in file 2440slib.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 137 in file 2440slib.s
Comment: MMU_EnableMMU used once
MMU_InvalidateDCache 0000011C

Symbol: MMU_InvalidateDCache
   Definitions
      At line 221 in file 2440slib.s
   Uses
      At line 220 in file 2440slib.s
Comment: MMU_InvalidateDCache used once
MMU_InvalidateDCacheMVA 00000124

Symbol: MMU_InvalidateDCacheMVA
   Definitions
      At line 227 in file 2440slib.s
   Uses
      At line 226 in file 2440slib.s
Comment: MMU_InvalidateDCacheMVA used once
MMU_InvalidateDTLB 0000016C

Symbol: MMU_InvalidateDTLB
   Definitions
      At line 290 in file 2440slib.s
   Uses
      At line 289 in file 2440slib.s
Comment: MMU_InvalidateDTLB used once
MMU_InvalidateDTLBMVA 00000174

Symbol: MMU_InvalidateDTLBMVA
   Definitions
      At line 296 in file 2440slib.s
   Uses
      At line 295 in file 2440slib.s
Comment: MMU_InvalidateDTLBMVA used once
MMU_InvalidateICache 00000104

Symbol: MMU_InvalidateICache
   Definitions
      At line 201 in file 2440slib.s
   Uses
      At line 200 in file 2440slib.s
Comment: MMU_InvalidateICache used once
MMU_InvalidateICacheMVA 0000010C

Symbol: MMU_InvalidateICacheMVA
   Definitions
      At line 207 in file 2440slib.s
   Uses
      At line 206 in file 2440slib.s
Comment: MMU_InvalidateICacheMVA used once
MMU_InvalidateIDCache 000000FC

Symbol: MMU_InvalidateIDCache
   Definitions
      At line 195 in file 2440slib.s
   Uses
      At line 194 in file 2440slib.s
Comment: MMU_InvalidateIDCache used once
MMU_InvalidateITLB 0000015C



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: MMU_InvalidateITLB
   Definitions
      At line 277 in file 2440slib.s
   Uses
      At line 276 in file 2440slib.s
Comment: MMU_InvalidateITLB used once
MMU_InvalidateITLBMVA 00000164

Symbol: MMU_InvalidateITLBMVA
   Definitions
      At line 283 in file 2440slib.s
   Uses
      At line 282 in file 2440slib.s
Comment: MMU_InvalidateITLBMVA used once
MMU_InvalidateTLB 00000154

Symbol: MMU_InvalidateTLB
   Definitions
      At line 271 in file 2440slib.s
   Uses
      At line 270 in file 2440slib.s
Comment: MMU_InvalidateTLB used once
MMU_PrefetchICacheMVA 00000114

Symbol: MMU_PrefetchICacheMVA
   Definitions
      At line 214 in file 2440slib.s
   Uses
      At line 213 in file 2440slib.s
Comment: MMU_PrefetchICacheMVA used once
MMU_SetAsyncBusMode 000000DC

Symbol: MMU_SetAsyncBusMode
   Definitions
      At line 164 in file 2440slib.s
   Uses
      At line 163 in file 2440slib.s
Comment: MMU_SetAsyncBusMode used once
MMU_SetDCacheLockdownBase 0000017C

Symbol: MMU_SetDCacheLockdownBase
   Definitions
      At line 306 in file 2440slib.s
   Uses
      At line 305 in file 2440slib.s
Comment: MMU_SetDCacheLockdownBase used once
MMU_SetDTLBLockdown 0000018C

Symbol: MMU_SetDTLBLockdown
   Definitions
      At line 323 in file 2440slib.s
   Uses
      At line 322 in file 2440slib.s
Comment: MMU_SetDTLBLockdown used once
MMU_SetDomain 000000F4

Symbol: MMU_SetDomain
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 185 in file 2440slib.s
   Uses
      At line 184 in file 2440slib.s
Comment: MMU_SetDomain used once
MMU_SetFastBusMode 000000CC

Symbol: MMU_SetFastBusMode
   Definitions
      At line 155 in file 2440slib.s
   Uses
      At line 154 in file 2440slib.s
Comment: MMU_SetFastBusMode used once
MMU_SetICacheLockdownBase 00000184

Symbol: MMU_SetICacheLockdownBase
   Definitions
      At line 313 in file 2440slib.s
   Uses
      At line 312 in file 2440slib.s
Comment: MMU_SetICacheLockdownBase used once
MMU_SetITLBLockdown 00000194

Symbol: MMU_SetITLBLockdown
   Definitions
      At line 330 in file 2440slib.s
   Uses
      At line 329 in file 2440slib.s
Comment: MMU_SetITLBLockdown used once
MMU_SetProcessId 0000019C

Symbol: MMU_SetProcessId
   Definitions
      At line 340 in file 2440slib.s
   Uses
      At line 339 in file 2440slib.s
Comment: MMU_SetProcessId used once
MMU_SetTTBase 000000EC

Symbol: MMU_SetTTBase
   Definitions
      At line 175 in file 2440slib.s
   Uses
      At line 174 in file 2440slib.s
Comment: MMU_SetTTBase used once
MMU_WaitForInterrupt 0000014C

Symbol: MMU_WaitForInterrupt
   Definitions
      At line 262 in file 2440slib.s
   Uses
      At line 261 in file 2440slib.s
Comment: MMU_WaitForInterrupt used once
SDRAMtest 00000000

Symbol: SDRAMtest
   Definitions
      At line 36 in file 2440slib.s
   Uses
      At line 35 in file 2440slib.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: SDRAMtest used once
SET_IF 00000020

Symbol: SET_IF
   Definitions
      At line 53 in file 2440slib.s
   Uses
      At line 52 in file 2440slib.s
Comment: SET_IF used once
WR_IF 00000034

Symbol: WR_IF
   Definitions
      At line 63 in file 2440slib.s
   Uses
      At line 62 in file 2440slib.s
Comment: WR_IF used once
39 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$C$$code 00000000

Symbol: .debug_info$$$C$$code
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$C$$code undefinedComment: .debug_info$$$C$$code unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$C$$code 00000000

Symbol: .debug_line$$$C$$code
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$C$$code undefinedComment: .debug_line$$$C$$code unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_abbrev 00000000

Symbol: .debug_abbrev
   Definitions
      None
   Uses
      None
Warning: .debug_abbrev undefinedComment: .debug_abbrev unused
__ARM_asm.debug_abbrev 00000000

Symbol: __ARM_asm.debug_abbrev
   Definitions
      None
   Uses
      None
Warning: __ARM_asm.debug_abbrev undefinedComment: __ARM_asm.debug_abbrev unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 10 in file 2440slib.s
   Uses
      At line 57 in file 2440slib.s
      At line 74 in file 2440slib.s

R1_A 00000002

Symbol: R1_A
   Definitions
      At line 83 in file 2440slib.s
   Uses
      At line 124 in file 2440slib.s
      At line 132 in file 2440slib.s

R1_C 00000004

Symbol: R1_C
   Definitions
      At line 82 in file 2440slib.s
   Uses
      At line 108 in file 2440slib.s
      At line 116 in file 2440slib.s

R1_I 00001000

Symbol: R1_I
   Definitions
      At line 81 in file 2440slib.s
   Uses
      At line 92 in file 2440slib.s
      At line 100 in file 2440slib.s

R1_M 00000001

Symbol: R1_M
   Definitions
      At line 84 in file 2440slib.s
   Uses
      At line 140 in file 2440slib.s
      At line 148 in file 2440slib.s

R1_iA 80000000

Symbol: R1_iA
   Definitions
      At line 85 in file 2440slib.s
   Uses
      At line 157 in file 2440slib.s
      At line 166 in file 2440slib.s

R1_nF 40000000

Symbol: R1_nF
   Definitions
      At line 86 in file 2440slib.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 157 in file 2440slib.s
      At line 166 in file 2440slib.s

7 symbols
370 symbols in table
